1.表格
  1.表格的作用
    按照一定的格式来显示数据
    表格是由一些单元格（列），按照从左到右，从上到下的顺序排列的
    表格中的数据最终都保存在单元格中
  2.使用表格
    1.创建表格
      1.定义表格:<table></table>
      2.创建行：<tr></tr> table row
      3.创建列：<td></td> table data
        默认每行的列数都是统一的

      练习：
         创建一个4行4列的表格
	 步骤：
	   1.创建一对<table>
	   2.在table中创建4对tr
	   3.在tr中创建4对td
    2.表格属性
      1.table属性
        1.width 设置表格的宽度
	2.height 设置表格的高度
	3.align 设置表格水平对齐方式
	        取值：left/center/right
        4.border 边框，指定边框的宽度
	5.bgcolor 设置表格的背景颜色
	6.cellspacing 设置表格外边距（单元格之间的距离）
	7.cellpadding 设置表格内边距（单元格与边框之间的距离）
    3.tr的属性
        1.align 该行内容的水平对齐方式
	  取值：left/center/right
	2.valign 设置改行内容的垂直对齐方式
	  取值：top/middle/bottom
	3.bgcolor 设置这一行的背景颜色
   4.td的属性
       1.align 
       2.valign
       3.width(同一列的单元格，不同宽度时以最宽的为准)
       4.height
       5.colspan 设置单元格跨列
       6.rowspan 设置单元格跨行
   5.表格的标题
      标记：<caption>标题</caption>
      注意：必须紧跟在table之后
            一个表格最多只能有个标题
      <th>:行标题或列标题，字体有加粗的效果，放在tr中

  3.表格的复杂使用
     1.行分组
       可以将表格分成3个部分：
       1.表头：<thead></thead>
       2.表的主体：<tbody></tbody>
       3.表尾：<tfoot></tfoot>
     2.不规则使用
       通过td的colspan(跨列)和rowspan（跨行）属性设置
       1.跨列
         从指定的单元格位置处，横向向右合并几个单元格（包括自己）
	 注意：被合并的单元格，要删除
	 属性：colspan
	 取值：数字（合并的单元格的个数）
       2.跨行
         从指定的单元格位置处，纵向向下合并几个单元格（包括自己）
	 注意：被合并的单元格，要删除
	 属性：rowspan
	 取值：数字
2.表单
   1.表单的作用
     用于显示、收集数据，并提交信息给服务器
     完整的表单处理包含以下两部分：
         1.实现数据交互的可见界面元素（前端）
	   ex:文本框，密码框...
	 2.提交后的表单数据处理（服务器端）
   2.表单元素
     标记：<form></form>
     属性：
        1.action
	  定义表单提交时发生的动作
	  指定服务器端处理程序的url地址
	  如果省略不写，默认提交给本页
	2.method
	  定义表单数据的提交方式
	  取值：
	     1.get(默认值)
	       1.明文提交，提交的数据会显示在地址栏上
	       2.安全性不高
	       3.有提交数据的大小有限2KB
	       4.场合：向服务器要数据时使用，搜索关键词提交
	     2.post
	       1.隐式提交，不会将提交的数据显示在地址栏上
	       2.安全性较高
	       3.无大小限制
	       4.场合：要传递数据给服务器进行处理时，使用post提交。
	         注意：有密码（隐式数据）提交的地方，一律用post提交
	     3.delete,put...
	
        3.enctype
	  作用：指定数据进行编码的格式
          取值：
	     1.application/x-www-form-urlencoded
	       默认值，可以将表单中普通文本，特殊字符，标点符号都进行二进制编码，然后提交（无法对文件进行编码提交）
	     2.multipart/form-data（普通文本一起传过去，   后端人员解析分别处理）
	       可以将表单中的文件进行二进制编码再提交
	     3.text/plain
	       可以将表单中的普通字符进行二进制编码再提交，其余无法提交
	4.name
	  定义表单的名称，JS用的比较多
	5.id
	  独一无二的标识
   3.表单控件
     1.作用
        用于接收用户的数据并依托于表单提交给服务器
     2.表单控件的分类
       1.input元素，文本框（文本框，密码框），按钮，单选按钮，复选框
         标记：<input>
       2.textarea元素
         多行文本域
	 标记：<textarea></textarea>
       3.select和option元素
         选项框：
	   标记：<select>
	            <option></option>
		 </select>
       4.其他元素
     3. input控件的详解
        1.文本框和密码框
	  文本框:<input type="text">
	  密码框:<input type="password">
	  专有属性：
	     1.maxlength 限制输入字符的数量
	       取值：数字
	     2.readonly
	       只读
	       disabled:禁用，不能被提交
	       readonly:只读，允许被提交
	     3.name
	       文本框与密码框的名称
	       缩写：txt
	       ex:<input type="text" name="txtName">
	          <input type="password" name="txtPwd">
	     4.placeholder
	       占位符
      
        2.单选按钮和复选按钮
	  单选按钮：<input type="radio">
	  复选按钮：<input type="checkbox">
	  属性：
	     1.name
	       名称，同时具备分组作用
	       单选按钮：一组中只能有一个按钮被提交
	       复选框：一组数据后台获取时名称相同
             2.value
	       值，被选中后提交的值
	     3.checked
	       设置默认被选中
	       改属性无值
	3.按钮
	  1.提交按钮
	    <input type="submit">
	    作用：提交表单数据给服务器
	  2.重置按钮
	    <input type="reset">
	    作用：将表单恢复到初始化是状态
	  3.普通按钮
	    <input type="button">
	    作用：由用户自定义功能（js）
	  三种按钮共有属性：
	     1.name
	       定义名称，缩写：btn
	     2.value
	       按钮上的文字
	  其他按钮：
	     1.图片按钮（提交）
	       <input type="image">
	       属性：src
	     2.按钮(提交按钮)
	       <button></button>
	4.隐藏域和文件选择框
	  1.隐藏域
	    <input type="hidden">
	    作用：要提交给服务器，但是不想给用户看的数据，放在隐藏域中。
	  2.文件选择框
	    <input type="file">
	    作用：允许打开文件选择框，选择文件进行上传
	    属性：
	      name:缩写 txt
	      value:值
	  3.注意
            使用文件选项框上传文件时，有以下两点要求：
	      1.<form>的method属性值必须为post
	      2.<form>的entype属性必须是multipart/form-data
     4.textarea元素
       1.作用
         完成多行文本的录入功能
       2.语法
         标记：<textarea>默认值</textarea>
	 属性:
	    1.name 名称，缩写：txt
	    2.cols 指定文本域的列数
	           变相设置控件的宽度
	    3.rows 指定文本域的行数
	           变相设置控件的高度
	    4.readonly 只读
     5.选项框
       分为：
          下拉选项框
	  滚动列表
       语法：
         1.标记：
	    <select></select>
	    作用：创建选项框（滚动列表）
	    属性：
	      1.name 名称，缩写：sel
	      2.size 指定选项框默认能显示几项内容
	        默认值 为1
		如果取值大于1 则为滚动条
	      3.multiple
	        设置允许多选（多选时，必须配合ctrl和shift一起用）
		该属性无值。
	 2.<option></option>
	   作用：选项框中的子选项
	   属性：
	     1.value 选项的值
	     2.selected 预选中，设置默认被选中的选项
	       该属性无值。
     6.其他元素
        1.label元素
	  作用：关联文字与表单控件，关联后，点击文字的时候如同点击表单控件
	2.语法
	  标记：<label></label>
	  属性：
	    for 表示与该元素关联的表单控件 id属性值
3.CSS概述
  1.什么是CSS？
    CSS:Cascading Style Sheets层叠样式表（级联样式表）,简称样式表。
    作用：设置HTML网页元素的样式
    CSS与HTML之间的关系：
       HTML：构建网页的结构（内容）
       CSS：构建网页元素的样式
    HTML与CSS之间的使用原则：
       W3C建议尽量使用CSS属性去取代HTML的属性
  2.CSS的语法规范
    1.使用CSS的方式
      1.内联样式
        又称为行内样式
	特点：将CSS样式定义在HTML标记中
	语法：<ANY style="CSS样式声明1；CSS样式声明2；...">
	样式声明：
	  1.由样式属性名称和值组成
	  2.属性名称与值之间用冒号(:)连接
	  3.多个样式声明之间用分号（;）做分割
	常用的样式属性和值：
	  1.属性：color 设置文本颜色
	    取值：合法的颜色值（英文单词）
	  2.属性：background 设置背景颜色
	    取值：合法的颜色值（英文单词）
	  3.属性：font-size 设置字体大小
	    取值：以px或pt为单位的数值
	    ex:font-size:30px;

      2.内部样式
         在网页中的一个独立地方声明的样式，在头元素<head></head>中。
	 语法：<head>
	          <style>
		     样式规则
		  </style>
	       </head>
	 样式规则：由选择器和样式声明组成
	 选择器：规范页面中哪些元素能够使用定义好的样式，其实就是为了匹配页面中的元素。
	 元素选择器：由元素名称作为选择器
	 样式规则：
	    选择器{样式声明1;
	           样式声明2;
		   ...
		  }
	     div{
	        color:red;
		font-size:20px;
	     }

      3.外部样式
        独立于任何网页位置处，声明一个样式表文件（.css为后缀），在文件中声明样式，在使用的网页中引入样式文件。
	使用步骤：
	    1.创建样式表文件（.css）
	    2.在.css文件中保存样式规则
	    3.在网页中引入样式文件
	      <head>
	         <link rel="stylesheet" href=".css">
	      </head>
	 练习：
	   用外部样式为span元素设置字体大小为50px，文本颜色为黄色。
  3.CSS样式特征
    1.继承性
       必须是父子关系（有层级关系）
       大部分CSS样式可以被继承
    2.层叠性
       可以为一个元素定义多个样式规则，规则中属性不冲突，可以同时都应用到当前元素上。
    3.优先级
      在层叠基础上，如果样式声明冲突的话，则按照优先级去应用样式
      默认优先级：
         由低到高：
	   浏览器默认设置
	   样式表（内部和外部）就近原则，后定义者优先
	   内联样式
    4.调整优先级
      !important规则
      将!importatn添加到CSS属性值之后，与值之间用空格分开即可。
      作用：调整显示的优先级
      ex:
        color:red !important;
      


1.CSS基础选择器
  1.选择器的作用
    规范了页面中哪些元素能够使用声明好的样式。
    为了匹配页面的元素。
  2.选择器详解
    1.元素选择器
      作用：设置页面上某种元素的样式
      语法：元素名称{声明样式}
         ex:div{}
	    p{}
	    a{}
	    img{}
	    h1{}
	    ul{}
	    ....
    2.类选择器
      作用：定义页面上某个或某些元素的样式（谁想用谁都可以用）
      特点：通过元素的class属性进行引用
      语法：
          1.声明
	    .类名{样式声明}
	    注意：
	      1.不能以数字开头
	      2.不能包含特殊字符(#,$,%,^,&,@)可以包含(_,-)
	      3.前面的点不能省略
	  2.引用
	    <ANY class="类名"></ANY>
      类选择器特殊用法：
          1.多类选择器
	    语法：<ANY class="类名1 类名2 类名3 ...">
	  2.分类选择器
	    将元素选择器和类选择器联合使用
	    语法：元素名称.类选择器{样式声明}
	    ex: span.text{color:red;}
	练习：
	  1.在页面中新建多个div元素和p元素，内容随意；
	  2.用类选择器为所有元素设置字体颜色为红色；
	  3.用分类选择器为p元素设置背景颜色为黄色。
    3.id选择器
      作用：设置指定id元素的样式（专属定制）
      语法：#idvalue{样式声明}
    4.群组选择器
      作用：将多个选择器放在一起进行样式的声明定义
      语法：选择器1，选择器2，选择器3,...{样式声明}
      div,p.text,.myc,#a1{
        color:red;
      }
      相当于：
      div{color:red;}
      p.text{color:red;}
      .myc{color:red;}
      #a1{color:red;}
   5.后代选择器
     作用：通过元素的后代关系匹配元素
     后代：一级或多余一级的父子关系
     语法：选择器1 选择器2 选择器3 ...{样式声明}
   6.子代选择器
     作用：通过元素的子代（一层）关系匹配元素
     语法：选择器1>选择器2
   7.伪类选择器
     作用：匹配元素不同状态的选择器
     语法：
        所有的伪类选择器都是以:作为开始
	选择器:伪类选择器{样式声明}
     分类：
        1.链接伪类
	   :link 匹配元素尚未访问的状态
	   :visited 匹配访问过的状态
	2.动态伪类
	   :hover 匹配鼠标悬停在元素上时的状态
	   :active 匹配元素被激活时的状态
	   :focus 匹配元素获取焦点时的状态(文本框，密码框)
	练习：
	   页面新建一个input文本框，默认效果颜色为灰色，字体是斜体（font-style:italic;）
	   1.被激活时字体为非斜体(font-style:normal;)
	   2.获取焦点时，文本颜色为红色（red）
   8.选择器的优先级
     权值：标识当前选择器的重要程度，权值越大优先级越高
         元素选择器  1
	 类选择器    10
	 伪类选择器  10
	 ID选择器    100
	 内联样式    1000
	 选择器权值加到一起，大的优先
	 权值相同，以后定义的为主
2.尺寸与边框
  1.单位
    1.尺寸单位
      1.px  像素
        1024*768
      2.in 英寸
        1in =2.54cm
      3.pt 磅值 1pt=1/72in 一般修饰文字的单位
      4.cm 厘米
      5.mm 毫米
      6.% 相对单位
    2.颜色单位（取值）
      1.颜色的英文单词
        red,blue,green,gray,pink.....
      2.rgb(r,g,b)
        r:red 0-255
	g:green 0-255
	b:blue 0-255
      3.rgb(r%,g%,b%)
      4.rgba(r,g,b,alpha)
        alpha:透明度， 0-1之间的数字，越大，越不透明
      5.#rrggbb
        0-9或A-F
	#000000:黑色
	#ffffff:白色
	#ff11aa
      6.#rgb是上面的缩写
        #000:黑色
	#fff:白色
	#f1a

  2.尺寸属性
    1.作用
       改变元素的宽度和高度
    2.语法
      宽度：width
      取值：数字px 或百分比%
      高度：height
    3.页面中允许修改尺寸的元素
      1.所有块级元素允许修改尺寸
        div,p,h1,h2...,ul,ol
      2.行内块元素允许修改尺寸
        表单控件元素（单选按钮，复选框）
      3.本身具备width和height属性的行内元素
        img,table
	注意：大部分的行内元素是无法修改其尺寸。

  3.溢出处理
    当内容多，元素区域小的时候，就会产生溢出的效果，默认都是纵向溢出
    属性：
      overflow,overflow-x,overflow-y
    取值：
      1.visible
        可见的，默认值，溢出可见
      2.hidden
        隐藏的，溢出的内容全部隐藏，不可见
      3.scroll
        显示滚动条，溢出时 可用
      4.auto 
        自动，溢出时才显示滚动条并可用

  4.边框
    1.边框属性
      1.简写方式
        border:width style color;
        width:边框的宽度 以px为单位的数值
	style:边框的样式 
	     取值：
	       solid 实线条
	       dotted 虚线边框（点）
	       dashed 虚线边框(线)
	color:边框颜色 合法的颜色值
	      也可以是透明色 transparent
	以上是四条边的设置方式
    2.单边设置
       只设置一条边的三个属性
       属性：
          border-top/bottom/left/right:width style color;
    3.单属性
      属性：
        border-width/style/color:值；
	border-style:solid;
    4.单边单属性设置
      属性：
        border-方向-属性：值；
	方向：top/bottom/left/right
	属性：width/style/color
	ex:
	 border-top-color:red;
  5.边框倒角
    将元素的直角倒成圆角
    属性：
      border-radius:值；
      取值：
        以px为单位的数值
	百分比 % 设置圆形
3.框模型
  1.什么是框模型
    框：元素的边框
    框模型：box model盒子模型，定义了元素框处理元素内容，内边距，外边距，边框的计算方式。
    内边距：元素内容与边框之间的空白间距
    外边距：元素边框外的空白间距（元素与元素之间的间距）
  2.框模型的计算模式
    元素的实际占地宽度=左右外边距+左右边框+左右内边距+width
    元素的实际占地高度=上下外边距+上下边框+上下内边距+height
  3.外边距
    1.语法
      属性：margin定义某个元素四个方向的外边距
            margin-top/bottom/left/right 单边定义
      取值：
        1.具体数值 px为单位
	2.取值为负数
	  让元素向相反的方向移动
	  margin-left:
	     取值为正，让元素右移动
	     取值为负，让元素左移动
	  margin-top:
	     取值为正，让元素下移动
	     取值为负，让元素上移动
	3.取值为%
	  外边距的值，父元素的宽或高的占比
	4.取值为auto
	  自动计算出外边距的值
	  控制块级元素水平居中显示
    2.简写方式
      1.margin:value
        四个方向的外边距
      2.margin:v1 v2
        v1 上下外边距
	v2 左右外边距
      3.margin:v1 v2 v3
        v1 上外边距
	v2 左右外边距
	v3 下外边距
      4.margin:v1 v2 v3 v4
        上 右 下 左（顺时针）
  4.内边距
    1.语法
      属性：
        padding:value 四个方向内边距
	padding-top/bottom/left/right 单边设置
      取值：
        1.以px为单位的数值
	2.以%为单位的数值
      简写方式：
        padding:value 四个方向
	padding:v1 v2 上下  左右
	padding:v1 v2 v3 上 左右 下
	padding:v1 v2 v3 v4 上右下左
      练习：
        在网页中创建两个div元素，尺寸为200*200，并设置边框为2px solid #f00;内容随意，设置两个div之间的间距为60px；
	在第一个div上增加上下左右四个方向的内边距各20px,观察效果。
4.背景属性
  1.背景色
    属性：background-color
    取值：合法的颜色值
    注意：默认背景颜色和背景图像都是从边框位置处开始填充
  2.背景图像
    属性：background-image
    取值：url(图像的路径)；
    ex:
      background-iamge:url(a.jpg);
  3.背景图像平铺
    属性：background-repeat
    取值：
       1.repeat
         默认值，横向和纵向都是平铺
       2.repeat-x
         只在水平方向平铺
       3.repeat-y
         只在垂直方向平铺
       4.no-repeat
         图片只显示一次，无平铺
      
  4.背景图像尺寸
    属性：background-size
    取值：
       1.width height
       2.width% height%
       3.cover
         将背景图片等比放大，直到背景图像完全覆盖整个元素内容区域为止。
       4.contain
         将背景图像等比放大，直到背景图碰到元素的某一个边缘为止。
  5.背景图像固定
    作用：将背景图固定在网页的某个位置，一直在可视区域中，不会随着滚动条而发生位置的变化。
    属性：background-attachment
    取值：
       1.scroll 滚动，默认值
       2.fixed 固定
  6.背景图像定位
    作用：改变背景图像在元素中的位置
    属性：background-position
    取值：
        1. x y
	  x：背景图像水平偏移距离
	     取值为正，向右移动
	     取值为负，向左移动
	  y：背景图像垂直偏移距离
	     取值为正，向下移动
	     取值为负，向上移动
	2.x% y%
	  0% 0%：背景图在左上角
	  100% 100%：右下角
	  50% 50%：正中间
	3.关键词
	  x:left/center/right
	  y:top/center/bottom
  7.背景的简写属性
    在一个属性中指定背景的多个属性值
    属性：background
    取值：color url() repeat attachment position;
      ex:background:red url(a.jpg) no-repeat;
