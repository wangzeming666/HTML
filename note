1.CSS基础选择器
  1.选择器的作用
    规范了页面中哪些元素能够使用声明好的样式。
    为了匹配页面的元素。
  2.选择器详解
    1.元素选择器
      作用：设置页面上某种元素的样式
      语法：元素名称{声明样式}
         ex:div{}
	    p{}
	    a{}
	    img{}
	    h1{}
	    ul{}
	    ....
    2.类选择器
      作用：定义页面上某个或某些元素的样式（谁想用谁都可以用）
      特点：通过元素的class属性进行引用
      语法：
          1.声明
	    .类名{样式声明}
	    注意：
	      1.不能以数字开头
	      2.不能包含特殊字符(#,$,%,^,&,@)可以包含(_,-)
	      3.前面的点不能省略
	  2.引用
	    <ANY class="类名"></ANY>
      类选择器特殊用法：
          1.多类选择器
	    语法：<ANY class="类名1 类名2 类名3 ...">
	  2.分类选择器
	    将元素选择器和类选择器联合使用
	    语法：元素名称.类选择器{样式声明}
	    ex: span.text{color:red;}
	练习：
	  1.在页面中新建多个div元素和p元素，内容随意；
	  2.用类选择器为所有元素设置字体颜色为红色；
	  3.用分类选择器为p元素设置背景颜色为黄色。
    3.id选择器
      作用：设置指定id元素的样式（专属定制）
      语法：#idvalue{样式声明}
    4.群组选择器
      作用：将多个选择器放在一起进行样式的声明定义
      语法：选择器1，选择器2，选择器3,...{样式声明}
      div,p.text,.myc,#a1{
        color:red;
      }
      相当于：
      div{color:red;}
      p.text{color:red;}
      .myc{color:red;}
      #a1{color:red;}
   5.后代选择器
     作用：通过元素的后代关系匹配元素
     后代：一级或多余一级的父子关系
     语法：选择器1 选择器2 选择器3 ...{样式声明}
   6.子代选择器
     作用：通过元素的子代（一层）关系匹配元素
     语法：选择器1>选择器2
   7.伪类选择器
     作用：匹配元素不同状态的选择器
     语法：
        所有的伪类选择器都是以:作为开始
	选择器:伪类选择器{样式声明}
     分类：
        1.链接伪类
	   :link 匹配元素尚未访问的状态
	   :visited 匹配访问过的状态
	2.动态伪类
	   :hover 匹配鼠标悬停在元素上时的状态
	   :active 匹配元素被激活时的状态
	   :focus 匹配元素获取焦点时的状态(文本框，密码框)
	练习：
	   页面新建一个input文本框，默认效果颜色为灰色，字体是斜体（font-style:italic;）
	   1.被激活时字体为非斜体(font-style:normal;)
	   2.获取焦点时，文本颜色为红色（red）
   8.选择器的优先级
     权值：标识当前选择器的重要程度，权值越大优先级越高
         元素选择器  1
	 类选择器    10
	 伪类选择器  10
	 ID选择器    100
	 内联样式    1000
	 选择器权值加到一起，大的优先
	 权值相同，以后定义的为主
2.尺寸与边框
  1.单位
    1.尺寸单位
      1.px  像素
        1024*768
      2.in 英寸
        1in =2.54cm
      3.pt 磅值 1pt=1/72in 一般修饰文字的单位
      4.cm 厘米
      5.mm 毫米
      6.% 相对单位
    2.颜色单位（取值）
      1.颜色的英文单词
        red,blue,green,gray,pink.....
      2.rgb(r,g,b)
        r:red 0-255
	g:green 0-255
	b:blue 0-255
      3.rgb(r%,g%,b%)
      4.rgba(r,g,b,alpha)
        alpha:透明度， 0-1之间的数字，越大，越不透明
      5.#rrggbb
        0-9或A-F
	#000000:黑色
	#ffffff:白色
	#ff11aa
      6.#rgb是上面的缩写
        #000:黑色
	#fff:白色
	#f1a

  2.尺寸属性
    1.作用
       改变元素的宽度和高度
    2.语法
      宽度：width
      取值：数字px 或百分比%
      高度：height
    3.页面中允许修改尺寸的元素
      1.所有块级元素允许修改尺寸
        div,p,h1,h2...,ul,ol
      2.行内块元素允许修改尺寸
        表单控件元素（单选按钮，复选框）
      3.本身具备width和height属性的行内元素
        img,table
	注意：大部分的行内元素是无法修改其尺寸。

  3.溢出处理
    当内容多，元素区域小的时候，就会产生溢出的效果，默认都是纵向溢出
    属性：
      overflow,overflow-x,overflow-y
    取值：
      1.visible
        可见的，默认值，溢出可见
      2.hidden
        隐藏的，溢出的内容全部隐藏，不可见
      3.scroll
        显示滚动条，溢出时 可用
      4.auto 
        自动，溢出时才显示滚动条并可用

  4.边框
    1.边框属性
      1.简写方式
        border:width style color;
        width:边框的宽度 以px为单位的数值
	style:边框的样式 
	     取值：
	       solid 实线条
	       dotted 虚线边框（点）
	       dashed 虚线边框(线)
	color:边框颜色 合法的颜色值
	      也可以是透明色 transparent
	以上是四条边的设置方式
    2.单边设置
       只设置一条边的三个属性
       属性：
          border-top/bottom/left/right:width style color;
    3.单属性
      属性：
        border-width/style/color:值；
	border-style:solid;
    4.单边单属性设置
      属性：
        border-方向-属性：值；
	方向：top/bottom/left/right
	属性：width/style/color
	ex:
	 border-top-color:red;
  5.边框倒角
    将元素的直角倒成圆角
    属性：
      border-radius:值；
      取值：
        以px为单位的数值
	百分比 % 设置圆形
3.框模型
  1.什么是框模型
    框：元素的边框
    框模型：box model盒子模型，定义了元素框处理元素内容，内边距，外边距，边框的计算方式。
    内边距：元素内容与边框之间的空白间距
    外边距：元素边框外的空白间距（元素与元素之间的间距）
  2.框模型的计算模式
    元素的实际占地宽度=左右外边距+左右边框+左右内边距+width
    元素的实际占地高度=上下外边距+上下边框+上下内边距+height
  3.外边距
    1.语法
      属性：margin定义某个元素四个方向的外边距
            margin-top/bottom/left/right 单边定义
      取值：
        1.具体数值 px为单位
	2.取值为负数
	  让元素向相反的方向移动
	  margin-left:
	     取值为正，让元素右移动
	     取值为负，让元素左移动
	  margin-top:
	     取值为正，让元素下移动
	     取值为负，让元素上移动
	3.取值为%
	  外边距的值，父元素的宽或高的占比
	4.取值为auto
	  自动计算出外边距的值
	  控制块级元素水平居中显示
    2.简写方式
      1.margin:value
        四个方向的外边距
      2.margin:v1 v2
        v1 上下外边距
	v2 左右外边距
      3.margin:v1 v2 v3
        v1 上外边距
	v2 左右外边距
	v3 下外边距
      4.margin:v1 v2 v3 v4
        上 右 下 左（顺时针）
  4.内边距
    1.语法
      属性：
        padding:value 四个方向内边距
	padding-top/bottom/left/right 单边设置
      取值：
        1.以px为单位的数值
	2.以%为单位的数值
      简写方式：
        padding:value 四个方向
	padding:v1 v2 上下  左右
	padding:v1 v2 v3 上 左右 下
	padding:v1 v2 v3 v4 上右下左
      练习：
        在网页中创建两个div元素，尺寸为200*200，并设置边框为2px solid #f00;内容随意，设置两个div之间的间距为60px；
	在第一个div上增加上下左右四个方向的内边距各20px,观察效果。
4.背景属性
  1.背景色
    属性：background-color
    取值：合法的颜色值
    注意：默认背景颜色和背景图像都是从边框位置处开始填充
  2.背景图像
    属性：background-image
    取值：url(图像的路径)；
    ex:
      background-iamge:url(a.jpg);
  3.背景图像平铺
    属性：background-repeat
    取值：
       1.repeat
         默认值，横向和纵向都是平铺
       2.repeat-x
         只在水平方向平铺
       3.repeat-y
         只在垂直方向平铺
       4.no-repeat
         图片只显示一次，无平铺
      
  4.背景图像尺寸
    属性：background-size
    取值：
       1.width height
       2.width% height%
       3.cover
         将背景图片等比放大，直到背景图像完全覆盖整个元素内容区域为止。
       4.contain
         将背景图像等比放大，直到背景图碰到元素的某一个边缘为止。
  5.背景图像固定
    作用：将背景图固定在网页的某个位置，一直在可视区域中，不会随着滚动条而发生位置的变化。
    属性：background-attachment
    取值：
       1.scroll 滚动，默认值
       2.fixed 固定
  6.背景图像定位
    作用：改变背景图像在元素中的位置
    属性：background-position
    取值：
        1. x y
	  x：背景图像水平偏移距离
	     取值为正，向右移动
	     取值为负，向左移动
	  y：背景图像垂直偏移距离
	     取值为正，向下移动
	     取值为负，向上移动
	2.x% y%
	  0% 0%：背景图在左上角
	  100% 100%：右下角
	  50% 50%：正中间
	3.关键词
	  x:left/center/right
	  y:top/center/bottom
  7.背景的简写属性
    在一个属性中指定背景的多个属性值
    属性：background
    取值：color url() repeat attachment position;
      ex:background:red url(a.jpg) no-repeat;
